-- Description:
-- L1Menu logic generated by VHDL Producer:

-- ========================================================
-- from VHDL producer:

-- Module ID: {{ module.id }}

-- Name of L1 Trigger Menu:
-- {{ menu.info.name }}

-- Unique ID of L1 Trigger Menu:
-- {{ menu.info.uuid_menu }}

-- Unique ID of firmware implementation:
-- {{ menu.info.uuid_firmware }}

-- Scale set:
-- {{ menu.info.scale_set }}

-- VHDL producer version
-- v{{ menu.info.sw_version }}
-- ========================================================

library ieee;
use ieee.std_logic_1164.all;

use work.lhc_data_pkg.all;
use work.gtl_pkg.all;
use work.lut_pkg.all;
use work.l1menu_pkg.all;

entity l1menu is
    port(
        lhc_clk : in std_logic;
        data : in data_pipeline_record;
        conv : in conv_pipeline_record;
        algo : out std_logic_vector(NR_ALGOS-1 downto 0));
end l1menu;

architecture rtl of l1menu is
-- Calculations outputs
    -- Differences
{%- set sig_calc_deta_list = [] %}
{%- set sig_calc_dphi_list = [] %}
    {%- include "helper/helper_instances_signals_differences.txt" %}
    -- Correlation cuts
{%- set comp_corr_cuts_list = [] %}
{%- for condition in module.caloCaloCorrConditions %}
    {%- include "helper/helper_comp_corr_cuts_signals.txt" %}
{%- endfor %}
{%- for condition in module.caloEsumCorrConditions %}
    {%- include "helper/helper_comp_corr_cuts_signals.txt" %}
{%- endfor %}
{%- for condition in module.caloMuonCorrConditions %}
    {%- include "helper/helper_comp_corr_cuts_signals.txt" %}
{%- endfor %}
{%- for condition in module.muonMuonCorrConditions %}
    {%- include "helper/helper_comp_corr_cuts_signals.txt" %}
{%- endfor %}
{%- for condition in module.muonEsumCorrConditions %}
    {%- include "helper/helper_comp_corr_cuts_signals.txt" %}
{%- endfor %}
{%- for condition in module.caloCaloCorrOvRmConditions %}
    {%- include "helper/helper_comp_corr_ovrm_cuts_signals.txt" %}
{%- endfor %}   
{%- set corr_cuts_list = [] %}
    {%- include "helper/helper_instances_signals_corr_cuts.txt" %}
    -- Muon charge correlation    
    signal cc_double : obj_bx_muon_cc_double_array;
    signal cc_triple : obj_bx_muon_cc_triple_array;
    signal cc_quad : obj_bx_muon_cc_quad_array;
-- Comparators outputs
    -- Object cuts
{%- set comp_obj_cuts_list = [] %}
{%- for condition in module.caloConditions %}
  {%- for i in range(0,condition.nr_objects) %}
    {%- with obj = condition.objects[i] %}
    {%- include "helper/helper_comp_obj_cuts_signals.txt" %}
    {%- endwith %}
  {%- endfor %}    
{%- endfor %}    
{%- for condition in module.esumsConditions %}
    {%- with obj = condition.objects[0] %}
    {%- include "helper/helper_comp_obj_cuts_signals.txt" %}
    {%- endwith %}
{%- endfor %}    
{%- for condition in module.minBiasConditions %}
    {%- with obj = condition.objects[0] %}
    {%- include "helper/helper_comp_obj_cuts_signals.txt" %}
    {%- endwith %}
{%- endfor %}    
{%- for condition in module.muonConditions %}
  {%- for i in range(0,condition.nr_objects) %}
    {%- with obj = condition.objects[i] %}
    {%- include "helper/helper_comp_obj_cuts_signals.txt" %}
    {%- endwith %}
  {%- endfor %}    
{%- endfor %}    
{%- for condition in module.caloCaloCorrConditions %}
   {%- with obj1 = condition.objects[0], obj2 = condition.objects[1] %}
    {%- include "helper/helper_comp_obj_cuts_signals_corr_cond.txt" %}
    {%- endwith %}
{%- endfor %}    
{%- for condition in module.caloEsumCorrConditions %}
   {%- with obj1 = condition.objects[0], obj2 = condition.objects[1] %}
    {%- include "helper/helper_comp_obj_cuts_signals_corr_cond.txt" %}
    {%- endwith %}
{%- endfor %}    
{%- for condition in module.caloCaloCorrOvRmConditions %}
  {%- if condition.nr_objects > 2 %}
    {%- with obj1 = condition.objects[0], obj2 = condition.objects[1], obj3 = condition.objects[2], nr_obj = condition.nr_objects %}
    {%- include "helper/helper_comp_obj_cuts_signals_corr_cond_ovrm.txt" %}
    {%- endwith %}
  {%- else %}
    {%- with obj1 = condition.objects[0], obj2 = condition.objects[1], nr_obj = condition.nr_objects %}
    {%- include "helper/helper_comp_obj_cuts_signals_corr_cond_ovrm.txt" %}
    {%- endwith %}
  {%- endif %}
{%- endfor %}    
{%- for condition in module.caloMuonCorrConditions %}
    {%- with obj1 = condition.objects[0], obj2 = condition.objects[1] %}
    {%- include "helper/helper_comp_obj_cuts_signals_corr_cond.txt" %}
    {%- endwith %}
{%- endfor %}    
{%- for condition in module.muonMuonCorrConditions %}
    {%- with obj1 = condition.objects[0], obj2 = condition.objects[1] %}
    {%- include "helper/helper_comp_obj_cuts_signals_corr_cond.txt" %}
    {%- endwith %}
{%- endfor %}    
{%- for condition in module.muonEsumCorrConditions %}
    {%- with obj1 = condition.objects[0], obj2 = condition.objects[1] %}
    {%- include "helper/helper_comp_obj_cuts_signals_corr_cond.txt" %}
    {%- endwith %}
{%- endfor %}    
    {%- include "helper/helper_instances_signals_comp_obj_cuts.txt" %}
-- Correlation cuts 
    {%- include "helper/helper_instances_signals_comp_corr_cuts.txt" %}
-- Muon charge correlation 
{%- set comp_charge_corr_list = [] %}
{%- for condition in module.muonConditions %}
    {%- include "helper/helper_comp_charge_corr_signals.txt" %}
{%- endfor %}
{%- for condition in module.muonMuonCorrConditions %}
    {%- include "helper/helper_comp_charge_corr_signals.txt" %}
{%- endfor %}
    {%- include "helper/helper_instances_signals_comp_charge_corr.txt" %}
-- Conditions inputs
    -- Object cuts "and"
{%- set comb_signals_list = [] %}
{%- for condition in module.caloConditions %}
  {%- for i in range(condition.nr_objects) %}
    {%- with obj = condition.objects[i] %}
      {%- include "helper/helper_comb_and_calos_signals.txt" %}
    {%- endwith %}
  {%- endfor %}    
{%- endfor %}    
{%- for condition in module.esumsConditions %}
  {%- set o1 = condition.objects[0] %}
  {%- if o1.type|lower == 'asymet' or o1.type|lower == 'asymht' or o1.type|lower == 'asymethf' or o1.type|lower == 'asymhthf' %}
   {%- with obj = condition.objects[0] %}
      {%- include "helper/helper_comb_and_count_signals.txt" %}
    {%- endwith %}
  {%- else %}
    {%- with obj = condition.objects[0] %}
     {%- include "helper/helper_comb_and_esums_signals.txt" %}
    {%- endwith %}
  {%- endif %} 
{%- endfor %}    
{%- for condition in module.minBiasConditions %}
  {%- with obj = condition.objects[0] %}
    {%- include "helper/helper_comb_and_count_signals.txt" %}
  {%- endwith %}
{%- endfor %}    
{%- for condition in module.muonConditions %}
  {%- for i in range(condition.nr_objects) %}
    {%- with obj = condition.objects[i] %}
      {%- include "helper/helper_comb_and_muons_signals.txt" %}
    {%- endwith %}
  {%- endfor %}    
{%- endfor %}    
{%- for condition in module.caloCaloCorrConditions %}
  {%- with obj = condition.objects[0] %}
    {%- include "helper/helper_comb_and_calos_signals.txt" %}
  {%- endwith %}
  {%- with obj = condition.objects[1] %}
    {%- include "helper/helper_comb_and_calos_signals.txt" %}
  {%- endwith %}
{%- endfor %}    
{%- for condition in module.caloCaloCorrOvRmConditions %}
  {%- with obj = condition.objects[0] %}
    {%- include "helper/helper_comb_and_calos_signals.txt" %}
  {%- endwith %}
  {%- with obj = condition.objects[1] %}
    {%- include "helper/helper_comb_and_calos_signals.txt" %}
  {%- endwith %}
  {%- if condition.nr_objects > 2 %}
    {%- with obj = condition.objects[2] %}
     {%- include "helper/helper_comb_and_calos_signals.txt" %}
    {%- endwith %}
  {%- endif %} 
{%- endfor %}    
{%- for condition in module.caloEsumCorrConditions %}
  {%- with obj = condition.objects[0] %}
    {%- include "helper/helper_comb_and_calos_signals.txt" %}
  {%- endwith %}
  {%- with obj = condition.objects[1] %}
    {%- include "helper/helper_comb_and_esums_signals.txt" %}
  {%- endwith %}
{%- endfor %}    
{%- for condition in module.caloMuonCorrConditions %}
  {%- with obj = condition.objects[0] %}
    {%- include "helper/helper_comb_and_calos_signals.txt" %}
  {%- endwith %}
  {%- with obj = condition.objects[1] %}
    {%- include "helper/helper_comb_and_muons_signals.txt" %}
  {%- endwith %}
{%- endfor %}    
{%- for condition in module.muonMuonCorrConditions %}
  {%- with obj = condition.objects[0] %}
    {%- include "helper/helper_comb_and_muons_signals.txt" %}
  {%- endwith %}
  {%- with obj = condition.objects[1] %}
    {%- include "helper/helper_comb_and_muons_signals.txt" %}
  {%- endwith %}
{%- endfor %}    
{%- for condition in module.muonEsumCorrConditions %}
  {%- with obj = condition.objects[0] %}
    {%- include "helper/helper_comb_and_muons_signals.txt" %}
  {%- endwith %}
  {%- with obj = condition.objects[1] %}
    {%- include "helper/helper_comb_and_esums_signals.txt" %}
  {%- endwith %}
{%- endfor %}    
    {%- include "helper/helper_instances_signals_comb.txt" %}
-- Signal definition for conditions names
{%- for condition in module.conditions %}
    signal {{ condition.vhdl_signal }} : std_logic;
{%- endfor %}
-- Signal definition for algorithms names
{%- for algorithm in module.algorithms|sort_by_attribute('index') %}
    signal {{ algorithm.vhdl_signal }} : std_logic;
{%- endfor %}
begin
-- First stage: calculations
    {%- include "helper/helper_instances_calculations.txt" %}
    
-- Second stage: comparisons
    {%- include "helper/helper_instances_comp_obj_cuts.txt" %}
    {%- include "helper/helper_instances_comp_corr_cuts.txt" %}
    {%- include "helper/helper_instances_comp_charge_corr.txt" %}

-- Third stage: conditions and algos
    -- Creating condition inputs (combination of object cuts)
    {%- include "helper/helper_instances_comb.txt" %}
    -- Instantiations of conditions
    {%- include "helper/helper_instances_conditions.txt" %}
    -- Instantiations of algorithms
{% for algorithm in module.algorithms|sort_by_attribute('index') %}
-- {{ algorithm.index }} {{ algorithm.name }} : {{ algorithm.expression }}
    {{ algorithm.vhdl_signal }} <= {{ algorithm.vhdl_expression }};
    algo({{ algorithm.module_index | d}}) <= {{ algorithm.vhdl_signal }};
{%- endfor %}

end architecture rtl;

